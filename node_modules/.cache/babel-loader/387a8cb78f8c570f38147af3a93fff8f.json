{"ast":null,"code":"var _jsxFileName = \"/Users/frederikgraakjaer/Downloads/react-firestore-post-app-main/src/pages/ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { usersRef } from \"../firebase-config\";\nimport { doc, getDoc, setDoc } from \"@firebase/firestore\";\nimport imgPlaceholder from \"../assets/img/img-placeholder.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfilePage(_ref) {\n  _s();\n\n  let {\n    showLoader\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const auth = getAuth();\n  useEffect(() => {\n    showLoader(true);\n\n    async function getUser() {\n      if (auth.currentUser) {\n        setEmail(auth.currentUser.email); // set the email state from the auth user objects email property\n        // get more info about the user from users collection\n\n        const docRef = doc(usersRef, auth.currentUser.uid); // use auth users uid to get user data from users collection\n\n        const userData = (await getDoc(docRef)).data();\n\n        if (userData) {\n          // if userData exists set states with values from userData (data from firestore)\n          setName(userData.name);\n          setTitle(userData.title);\n          setImage(userData.image);\n        }\n      }\n\n      showLoader(false);\n    }\n\n    getUser();\n  }, [auth.currentUser, showLoader]); // dependencies: useEffect is executed when auth.currentUser changes\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    showLoader(true);\n    const userToUpdate = {\n      name: name,\n      title: title,\n      image: image\n    }; // create an object to hold the user to update properties\n\n    const docRef = doc(usersRef, auth.currentUser.uid); // create reference to the user in firestore\n\n    await setDoc(docRef, userToUpdate); // set/update the user in firestore with the values from userToUpdate/values from input fields\n\n    showLoader(false);\n  }\n\n  function handleSignOut() {\n    signOut(auth); // sign out from firebase/auth\n  }\n  /**\n   * handleImageChange is called every time the user chooses an image in the fire system.\n   * The event is fired by the input file field in the form\n   */\n\n\n  function handleImageChange(event) {\n    const file = event.target.files[0];\n\n    if (file.size < 500000) {\n      // image file size must be below 0,5MB\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        setImage(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n      setErrorMessage(\"\"); // reset errorMessage state\n    } else {\n      // if not below 0.5MB display an error message using the errorMessage state\n      setErrorMessage(\"The image file is too big!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          name: \"name\",\n          placeholder: \"Type name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          name: \"email\",\n          placeholder: \"Type email\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          name: \"title\",\n          placeholder: \"Type your title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"file-input\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image-preview\",\n          src: image,\n          alt: \"Choose\",\n          onError: event => event.target.src = imgPlaceholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-outline\",\n      onClick: handleSignOut,\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfilePage, \"lJ4i6SuzxAenWuFTInUI2iW94DE=\");\n\n_c = ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/frederikgraakjaer/Downloads/react-firestore-post-app-main/src/pages/ProfilePage.js"],"names":["useEffect","useState","getAuth","signOut","usersRef","doc","getDoc","setDoc","imgPlaceholder","ProfilePage","showLoader","name","setName","title","setTitle","email","setEmail","image","setImage","errorMessage","setErrorMessage","auth","getUser","currentUser","docRef","uid","userData","data","handleSubmit","event","preventDefault","userToUpdate","handleSignOut","handleImageChange","file","target","files","size","reader","FileReader","onload","result","readAsDataURL","e","value","src"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { usersRef } from \"../firebase-config\";\nimport { doc, getDoc, setDoc } from \"@firebase/firestore\";\nimport imgPlaceholder from \"../assets/img/img-placeholder.jpg\";\n\nexport default function ProfilePage({ showLoader }) {\n    const [name, setName] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const auth = getAuth();\n\n    useEffect(() => {\n        showLoader(true);\n\n        async function getUser() {\n            if (auth.currentUser) {\n                setEmail(auth.currentUser.email); // set the email state from the auth user objects email property\n                // get more info about the user from users collection\n                const docRef = doc(usersRef, auth.currentUser.uid); // use auth users uid to get user data from users collection\n                const userData = (await getDoc(docRef)).data();\n                if (userData) {\n                    // if userData exists set states with values from userData (data from firestore)\n                    setName(userData.name);\n                    setTitle(userData.title);\n                    setImage(userData.image);\n                }\n            }\n            showLoader(false);\n        }\n\n        getUser();\n    }, [auth.currentUser, showLoader]); // dependencies: useEffect is executed when auth.currentUser changes\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        showLoader(true);\n\n        const userToUpdate = { name: name, title: title, image: image }; // create an object to hold the user to update properties\n        const docRef = doc(usersRef, auth.currentUser.uid); // create reference to the user in firestore\n        await setDoc(docRef, userToUpdate); // set/update the user in firestore with the values from userToUpdate/values from input fields\n        showLoader(false);\n    }\n\n    function handleSignOut() {\n        signOut(auth); // sign out from firebase/auth\n    }\n\n    /**\n     * handleImageChange is called every time the user chooses an image in the fire system.\n     * The event is fired by the input file field in the form\n     */\n    function handleImageChange(event) {\n        const file = event.target.files[0];\n        if (file.size < 500000) {\n            // image file size must be below 0,5MB\n            const reader = new FileReader();\n            reader.onload = event => {\n                setImage(event.target.result);\n            };\n            reader.readAsDataURL(file);\n            setErrorMessage(\"\"); // reset errorMessage state\n        } else {\n            // if not below 0.5MB display an error message using the errorMessage state\n            setErrorMessage(\"The image file is too big!\");\n        }\n    }\n\n    return (\n        <section className=\"page\">\n            <h1>Profile</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Name\n                    <input type=\"text\" value={name} onChange={e => setName(e.target.value)} name=\"name\" placeholder=\"Type name\" />\n                </label>\n                <label>\n                    Email\n                    <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} name=\"email\" placeholder=\"Type email\" disabled />\n                </label>\n                <label>\n                    Title\n                    <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} name=\"title\" placeholder=\"Type your title\" />\n                </label>\n                <label>\n                    Image\n                    <input type=\"file\" className=\"file-input\" accept=\"image/*\" onChange={handleImageChange} />\n                    <img className=\"image-preview\" src={image} alt=\"Choose\" onError={event => (event.target.src = imgPlaceholder)} />\n                </label>\n                <p className=\"text-error\">{errorMessage}</p>\n                <button>Save User</button>\n            </form>\n            <button className=\"btn-outline\" onClick={handleSignOut}>\n                Sign Out\n            </button>\n        </section>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}