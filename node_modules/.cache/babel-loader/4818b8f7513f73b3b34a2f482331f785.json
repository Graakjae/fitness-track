{"ast":null,"code":"var _jsxFileName = \"/Users/frederikgraakjaer/Downloads/react-firestore-post-app-main/src/pages/SignUpPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage(_ref) {\n  _s();\n\n  let {\n    showLoader\n  } = _ref;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const auth = getAuth();\n  useEffect(() => {\n    showLoader(false);\n  }, [showLoader]);\n\n  function handleSignUp(event) {\n    event.preventDefault();\n    const mail = event.target.mail.value; // mail value from inout field in sign in form\n\n    const password = event.target.password.value; // password value from inout field in sign in form\n    // read the docs: https://firebase.google.com/docs/auth/web/password-auth#create_a_password-based_account\n\n    createUserWithEmailAndPassword(auth, mail, password).then(userCredential => {\n      // Created and signed in\n      const user = userCredential.user;\n      console.log(user); // for test purposes: logging the authenticated user\n    }).catch(error => {\n      let code = error.code; // saving error code in variable\n\n      console.log(code);\n      code = code.replaceAll(\"-\", \" \"); // some JS string magic to display error message. See the log above in the console\n\n      code = code.replaceAll(\"auth/\", \"\");\n      setErrorMessage(code);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"mail\",\n        placeholder: \"Type your mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Type your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-in\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpPage, \"n3R4++OV+yCYapB8Jjnbc/DCeag=\");\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/Users/frederikgraakjaer/Downloads/react-firestore-post-app-main/src/pages/SignUpPage.js"],"names":["useEffect","useState","getAuth","createUserWithEmailAndPassword","Link","SignUpPage","showLoader","errorMessage","setErrorMessage","auth","handleSignUp","event","preventDefault","mail","target","value","password","then","userCredential","user","console","log","catch","error","code","replaceAll"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,8BAAlB,QAAwD,eAAxD;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC/C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMQ,IAAI,GAAGP,OAAO,EAApB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaD,IAAb,CAAkBE,KAA/B,CAFyB,CAEa;;AACtC,UAAMC,QAAQ,GAAGL,KAAK,CAACG,MAAN,CAAaE,QAAb,CAAsBD,KAAvC,CAHyB,CAGqB;AAE9C;;AACAZ,IAAAA,8BAA8B,CAACM,IAAD,EAAOI,IAAP,EAAaG,QAAb,CAA9B,CACKC,IADL,CACUC,cAAc,IAAI;AACpB;AACA,YAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAHoB,CAGD;AACtB,KALL,EAMKG,KANL,CAMWC,KAAK,IAAI;AACZ,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB,CADY,CACW;;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACC,UAAL,CAAgB,GAAhB,EAAqB,GAArB,CAAP,CAHY,CAGsB;;AAClCD,MAAAA,IAAI,GAAGA,IAAI,CAACC,UAAL,CAAgB,OAAhB,EAAyB,EAAzB,CAAP;AACAjB,MAAAA,eAAe,CAACgB,IAAD,CAAf;AACH,KAZL;AAaH;;AAED,sBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEd,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BH;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,2DAC6B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA5CuBF,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SignUpPage({ showLoader }) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const auth = getAuth();\n\n    useEffect(() => {\n        showLoader(false);\n    }, [showLoader]);\n\n    function handleSignUp(event) {\n        event.preventDefault();\n        const mail = event.target.mail.value; // mail value from inout field in sign in form\n        const password = event.target.password.value; // password value from inout field in sign in form\n\n        // read the docs: https://firebase.google.com/docs/auth/web/password-auth#create_a_password-based_account\n        createUserWithEmailAndPassword(auth, mail, password)\n            .then(userCredential => {\n                // Created and signed in\n                const user = userCredential.user;\n                console.log(user); // for test purposes: logging the authenticated user\n            })\n            .catch(error => {\n                let code = error.code; // saving error code in variable\n                console.log(code);\n                code = code.replaceAll(\"-\", \" \"); // some JS string magic to display error message. See the log above in the console\n                code = code.replaceAll(\"auth/\", \"\");\n                setErrorMessage(code);\n            });\n    }\n\n    return (\n        <section className=\"page\">\n            <h1>Sign Up</h1>\n            <form onSubmit={handleSignUp}>\n                <input type=\"email\" name=\"mail\" placeholder=\"Type your mail\" />\n                <input type=\"password\" name=\"password\" placeholder=\"Type your password\" />\n                <p className=\"text-error\">{errorMessage}</p>\n                <button>Sign Up</button>\n            </form>\n            <p className=\"text-center\">\n                Already have an account? <Link to=\"/sign-in\">Sign In</Link>\n            </p>\n        </section>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}